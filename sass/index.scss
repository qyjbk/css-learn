$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* 因为浏览器已经渐渐统一，所以对于简单的页面可以用通配符来进行总体样式清除 */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 字体大小不可以固定，会导致影响用户为浏览器设置的字体大小 */
html {
    /* 默认会将字体设为10px */
    font-size: 62.5%;
    /* 10 ÷ 16 × 100% = 62.5% */
}

/* 因为字体是继承的所以可以写在body里 */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
}

/* 盒子的高度应该为视口的95  */
.header {
    position: relative;
    height: 95vh;
    background-image: linear-gradient(to bottom right,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;

    }

    &__logo {
        height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);

        text-align: center;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);

        text-align: center;
    }
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    /* 防止低版本子元素不同动画出现的抖动现象 */
    backface-visibility: hidden;
    /* 为类按钮设计margin */
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        letter-spacing: 3.5rem;
        font-weight: 400;

        animation-name: moveInLeft;
        animation-duration: 3s;
    }

    &--sub {
        display: block;
        font-size: 2rem;
        letter-spacing: 17.4px;
        font-weight: 700;

        animation-name: moveInRight;
        animation-duration: 3s;
        animation-timing-function: ease-out;
    }
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(5rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.btn {

    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        color: black;
        padding: 1.5rem 4rem;
        /* 因为a元素是一个内联元素，给他padding不会导致他的行高适应，所有需要将他设置为行类块元素 */
        display: inline-block;
        /* 由此，因为a是文本，所以想要这个类按钮居中只需要将父盒子的文本属性居中即可，转到58行 */

        border-radius: 10rem;
        transition: all .2s;
        /* 为伪元素设计标杆 */
        position: relative;
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black, .2);

        /* 选择当btn被鼠标悬停时的伪元素 */
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &::after {
        content: ' ';
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        /* 此时的伪元素想当于btn的子元素，而我们想要其在btn的背后需要将他移出文档流 */
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;

        transition: all .4s;
    }
    
    /* 为类按钮添加动画 */
    &--animation {
        animation-name: moveInBottom;
        animation-duration: .5s;
        animation-timing-function: ease-out;
        animation-delay: 1s;
        /* 仅使用上述的属性时，会导致动画起止便显示在了页面上 */
        /* 使用该属性让动画未触发时保持第一帧的样子 */
        animation-fill-mode: backwards;
    }
}